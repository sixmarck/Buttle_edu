carRegister=INSERT INTO Car VALUES (carSeq.nextval, ?, ?, ?, ?, ?, ?, ?, default,default)
carDelete=DELETE FROM Car WHERE carNo=?
agentByOneSalsesList=SELECT decode(a.agtNo, null, '\uC804\uCCB4\uD569\uACC4', a.agtNo) AS agtNo, decode(b.carName, null, '\uC18C\uACC4', b.carName) AS carName, sum(c.resTotal) AS resTotal FROM Agent a, Car b, Reservation c WHERE a.agtNo=b.agtNo and b.carNo=c.carNo and a.agtNo=? GROUP BY ROLLUP (a.agtNo, b.carName)
allAgentBySalseList=SELECT decode(a.agtNo, null, '\uC804\uCCB4\uD569\uACC4', a.agtNo) AS agtNo, decode(b.carName, null, '\uC18C\uACC4', b.carName) AS carName, sum(c.resTotal) AS resTotal FROM Agent a, Car b, Reservation c WHERE a.agtNo=b.agtNo and b.carNo=c.carNo GROUP BY ROLLUP (a.agtNo, b.carName)
agentReservationList=SELECT c.agtNo, r.memID, c.carName, r.resDate, r.resStartDate, r.resEndDate, r.resOption, r.resTotal FROM Reservation r, Car c WHERE r.carNo=c.carNo and agtNo=? ORDER BY resStartDate desc
allReservationList=SELECT c.agtNo, r.memID, c.carName, r.resDate, r.resStartDate, r.resEndDate, r.resOption, r.resTotal FROM Reservation r, Car c WHERE r.carNo=c.carNo ORDER BY resStartDate desc
adminGradeSelectMember=SELECT *FROM (SELECT a.*, CASE WHEN a.accCnt>=2 THEN 'BAD' WHEN accCnt<2 AND resCnt=2 THEN 'VIP' WHEN accCnt<2 AND resCnt>=3 THEN 'VVIP' ELSE 'NORMAL' END AS updateGrade FROM (  SELECT a.memID,a.disGrade, COUNT (b.memID) AS resCnt, COUNT (c.memID) AS accCnt FROM Member a, Reservation b, Accident c WHERE     a.memID = b.memID AND a.memID = c.memID(+) AND disGrade NOT IN ('ADMIN', 'CEO') GROUP BY a.memID, a.disGrade) a) WHERE disGrade <> updateGrade ORDER BY memID
adminGradeUpdateMember=update member set disGrade=? where memID=?
allMemberList=SELECT memID,memName,memTel,memBirthday,memLicense,memAddress,memMileage,disGrade FROM Member
allGradeMemberList=SELECT memID,memName,memTel,memBirthday,memLicense,memAddress,memMileage,disGrade FROM Member WHERE disGrade=? Order by memID
returnCar=select * from (select a.*,  CASE WHEN toDay=resEndDate and carState= 'N' THEN 'TODAY' WHEN toDay<resEndDate and carState = 'N' THEN 'PREVIOUS' WHEN toDay>resEndDate and carState = 'N' THEN 'OVER' ELSE 'COMPLETE' end as dueState from (select c.resNo, d.memID, a.agtNo, b.carState, c.resEndDate, sysdate as toDay from agent a, car b, reservation c, member d where a.agtNo = b.agtNo and b.carNo = c.carNo and c.memID = d.memID and b.agtNo = ?) a) where dueState <> 'COMPLETE'
loginReturnCar=select * from (select a.*,  CASE WHEN toDay=resEndDate and carState= 'N' THEN 'TODAY' WHEN toDay<resEndDate and carState = 'N' THEN 'PREVIOUS' WHEN toDay>resEndDate and carState = 'N' THEN 'OVER' ELSE 'COMPLETE' end as dueState from (select c.resNo, d.memID, a.agtNo, b.carState, c.resEndDate, sysdate as toDay from agent a, car b, reservation c, member d where a.agtNo = b.agtNo and b.carNo = c.carNo and c.memID = d.memID and d.memID=? ) a) where dueState <> 'COMPLETE'
updateStateCar=MERGE INTO Car a USING (select resNo, carNo from Reservation) b ON (a.carNo = b.carNo and b.resno = ?) WHEN MATCHED THEN UPDATE SET a.carState = 'Y'