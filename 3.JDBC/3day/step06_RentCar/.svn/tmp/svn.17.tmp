package view;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import model.dto.SessionDTO;
import util.Util;
import controller.AdminController;
import controller.MemberController;
import controller.MilegeController;

public class MainView {
	private static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
	private static SessionDTO session = null;
	
	public static int startForm() throws IOException{
		System.out.print("1. 회원가입\n2. 로그인\n3. 종료\n선택 : ");
		int index = Integer.parseInt(reader.readLine());
		switch (index) {
			case Util.NO1 :
				// 회원가입
				memberRegisterForm();
				break;
			case Util.NO2 :
				// 로그인
				memberLoginForm();
				break;
			case Util.NO3 :
				// 로그아웃
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void memberRegisterForm() throws IOException {
		System.out.print("아이디 : ");
		String memID = reader.readLine();
		System.out.print("비밀번호 : ");
		String memPW = reader.readLine();
		System.out.print("이름 : ");
		String memName = reader.readLine();
		System.out.print("전화번호 : ");
		String memTel = reader.readLine();
		System.out.print("생년월일 : ");
		String memBirthday = reader.readLine();
		System.out.print("면허증번호 : ");
		String memLicense = reader.readLine();
		System.out.print("주소 : ");
		String memAddress = reader.readLine();
	}
	
	public static void memberLoginForm() throws IOException {
		String id = null;
		String pw = null;
		System.out.print("아이디 : ");
		id = reader.readLine();
		System.out.print("비밀번호 : ");
		pw = reader.readLine();
		memberLogin(id, pw);
	}
	
	public static void memberLogin(String id, String pw) throws IOException{
		session = MemberController.memberLogin(id, pw);
		if(session == null){
			System.out.println("아이디 및 패스워드가 잘못되었습니다.");
		} else {
			switch (session.getDisGrade()) {
				case Util.GRADE_CEO :
					System.out.println(session.getMemName()+"(사장님)");
					ceoForm();
					break;
				case Util.GRADE_ADMIN :
					System.out.println(session.getMemName()+"(지점장님)");
					adminForm();
					break;
				case Util.GRADE_VVIP :
				case Util.GRADE_VIP :
				case Util.GRADE_NORMAL :
				case Util.GRADE_BAD :
					System.out.println(session.getMemName()+" 회원님 환영합니다.");
					userForm();
					break;
				default:
					break;
			}
		}
	}
	
	public static void adminForm() throws IOException {
		while(true) {
			System.out.print("1. 회원관리\n2. 차량관리\n3. 매출관리\n4. 예약현황\n5. 사고관리\n6. 로그아웃\n선택 : ");
			if(admin(Integer.parseInt(reader.readLine()))==Util.NO6) {
				break;
			}
		}
	}
	
	public static int admin(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 회원관리
				adminMemberForm();
				break;
			case Util.NO2 :
				// 차량관리
				carForm();
				break;
			case Util.NO3 :
				// 매출관리
				adminSalseForm();
				break;
			case Util.NO4 :
				// 예약현황
				adminRentForm();
				break;
			case Util.NO5 :
				// 사고관리
				accidentForm();
				break;
			case Util.NO6 :
				// 로그아웃
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void adminMemberForm() throws IOException {
		while(true) {
			System.out.print("1. 회원전체보기\n2. 회원등급별보기\n3. 등급관리\n4. 돌아가기\n선택 : ");
			if(adminMember(Integer.parseInt(reader.readLine())) == Util.NO4) {
				break;
			}
		}
	}
	
	public static int adminMember(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 회원전체보기
				AdminController.allMemberList();
				break;
			case Util.NO2 :
				// 회원등급별보기
				gradeMemberForm();
				break;
			case Util.NO3 :
				// 등급관리
				gradeUpdateForm();
				break;
			case Util.NO4 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void gradeUpdateForm() throws IOException {
		System.out.println("등업대상 명단");
		AdminController.adminGradeUpdateMember();
	}
	
	public static void carForm() throws IOException {
		while(true) {
			System.out.print("1. 차량등록\n2. 차량삭제\n3. 돌아가기\n선택 : ");
			if(car(Integer.parseInt(reader.readLine()))==Util.NO3) {
				break;
			}
		}
	}
	
	public static int car(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 차량등록
				carRegisterForm();
				break;
			case Util.NO2 :
				// 차량삭제
				carDeleteForm();
				break;
			case Util.NO3 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void carRegisterForm() throws IOException {
		System.out.print("자동차명 : ");
		String carName = reader.readLine();
		System.out.print("차량번호 : ");
		String carNum = reader.readLine();
		System.out.print("탑승인원 : ");
		String carPax = reader.readLine();
		System.out.print("차량종류 : ");
		String carKind = reader.readLine();
		System.out.print("기본료 : ");
		String carPrice = reader.readLine();
		System.out.print("연료 : ");
		String carFuel = reader.readLine();
	}
	
	public static void carDeleteForm() throws IOException {
		System.out.print("삭제할 차량번호 선택 : ");
		reader.readLine();
	}
	
	public static void adminSalseForm() throws IOException {
		while(true) {
			System.out.print("1. 매출리스트\n2. 돌아가기\n선택 : ");
			if(adminSalse(Integer.parseInt(reader.readLine()))==Util.NO2) {
				break;
			}
		}
	}
	
	public static int adminSalse(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 매출리스트
				agentBySalse();
				break;
			case Util.NO2 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void adminRentForm() throws IOException {
		while(true) {
			System.out.print("1. 렌트현황\n2. 돌아가기\n선택 : ");
			if(adminRent(Integer.parseInt(reader.readLine()))==Util.NO2) {
				break;
			}
		}
	}
	
	public static int adminRent(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 렌트현황
				agentByRentForm();
				break;
			case Util.NO2 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void accidentForm() throws IOException {
		while(true) {
			System.out.print("1. 사고접수\n2. 사고삭제\n3. 돌아가기\n선택 : ");
			if(accident(Integer.parseInt(reader.readLine()))==Util.NO3) {
				break;
			}
		}
	}
	
	public static int accident(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 사고접수
				accidentRegisterForm();
				break;
			case Util.NO2 :
				accidentDeleteForm();
				// 사고삭제
				break;
			case Util.NO3 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void accidentRegisterForm() throws IOException {
		System.out.print("사고자 : ");
		String memID = reader.readLine();
		System.out.print("내용 : ");
		String accContent = reader.readLine();
	}
	
	public static void accidentDeleteForm() throws IOException {
		System.out.print("삭제할 사고번호 선택 : ");
		reader.readLine();
	}
	
	public static void ceoForm() throws IOException {
		while(true) {
			System.out.print("1. 회원관리\n2. 매출관리\n3. 렌트현황\n4. 로그아웃\n선택 : ");
			if(ceo(Integer.parseInt(reader.readLine()))==Util.NO4) {
				break;
			}
		}
	}
	
	public static int ceo(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 회원관리
				ceoMemberForm();
				break;
			case Util.NO2 :
				// 매출관리
				ceoSalseForm();
				break;
			case Util.NO3 :
				// 렌트현황
				ceoRentForm();
				break;
			case Util.NO4 :
				// 로그아웃
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void ceoMemberForm() throws IOException {
		while(true) {
			System.out.print("1. 회원전체보기\n2. 회원등급별보기\n3. 돌아가기\n선택 : ");
			if(ceoMember(Integer.parseInt(reader.readLine()))==Util.NO3) {
				break;
			}
		}
	}
	
	public static int ceoMember(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 회원전체보기
				break;
			case Util.NO2 :
				// 회원등급별보기
				gradeMemberForm();
				break;
			case Util.NO3 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void gradeMemberForm() throws IOException {
		System.out.print("등급선택 ex) [1] Bad, [2] Normal, [3] VIP, [4] VVIP : ");
		int disGrade = Integer.parseInt(reader.readLine());
		AdminController.allGradeMemberList(Util.GRADECODE[disGrade-1]);
	}
		
	public static void ceoSalseForm() throws IOException {
		while(true) {
			System.out.print("1. 전체대리점매출리스트\n2. 대리점별매출리스트\n3. 돌아가기\n선택 : ");
			if(ceoSalse(Integer.parseInt(reader.readLine()))==Util.NO3) {
				break;
			}
		}
	}
	
	public static int ceoSalse(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 전체대리점매출리스트
				System.out.println("ceo");
				AdminController.allAgentBySalseList();
				break;
			case Util.NO2 :
				// 대리점별매출리스트
				agentBySalse();
				break;
			case Util.NO3 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void agentBySalse() throws IOException {
		System.out.print("대리점선택 ex) [1] 경기, [2] 서울, [3] 인천 : ");
		AdminController.agentByOneSalsesList(Integer.parseInt(reader.readLine()));
	}
	
	public static void ceoRentForm() throws IOException {
		while(true) {
			System.out.print("1. 전체렌트현황\n2. 대리점별렌트현황\n3. 돌아가기\n선택 : ");
			if(ceoRent(Integer.parseInt(reader.readLine()))==Util.NO3) {
				break;
			}
		}
	}
	
	public static int ceoRent(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				// 전체렌트현황
				break;
			case Util.NO2 :
				// 대리점별렌트현황
				agentByRentForm();
				break;
			case Util.NO3 :
				// 돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void agentByRentForm() throws IOException {
		System.out.print("대리점선택 ex) [1] 경기, [2] 서울, [3] 인천 : ");
		int agtNo = Integer.parseInt(reader.readLine());
	}
	
	public static void userForm() throws IOException {
		while(true) {
			System.out.print("1. 요금정보\n2. 실시간 예약\n3. 예약취소\n4. 마일리지 충전\n5. 고객센터\n6. 로그아웃\n선택 : ");
			if(user(Integer.parseInt(reader.readLine()))==Util.NO6) {
				session = null;
				break;
			}
		}
	}
	
	public static int user(int index) throws IOException {
		switch (index) {
			case	Util.NO1 :
				// 요금정보
				break;
			case Util.NO2 :
				// 실시간 예약
				rentalForm();
				break;
			case Util.NO3 :
				// 예약취소
				cancellationFrom();
				break;
			case Util.NO4 :
				// 마일리지 충전
				mileageForm();
				break;
			case Util.NO5 :
				// 고객센터
				boardForm();
				break;
			case Util.NO6 :
				// 로그아웃
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void rentalForm() throws IOException {
		System.out.print("대여 기간 입력 ex) [1] 1일, [2] 2일, [3] 3일, ... : ");
		int day = Integer.parseInt(reader.readLine());
		System.out.print("차종 입력 ex) [1] 소형, [2] 중형, [3] 준중형, [4] SUV, [5] 승합차 : ");
		int carKind = Integer.parseInt(reader.readLine());
		System.out.print("지점 입력 ex) [1] 경기, [2] 서울, [3] 인천 : ");
		int agtLoc = Integer.parseInt(reader.readLine());
		carListForm();
	}
	
	public static void carListForm() throws IOException {
		System.out.println("차량리스트");
		System.out.print("차량 선택 : ");
		carOptionForm(Integer.parseInt(reader.readLine()));
	}
	
	public static void carOptionForm(int index) throws IOException {
		System.out.println("옵션 여부");
		System.out.print("네비게이션 ex) [1] Yes, [2] No : ");
		String naviResult = reader.readLine();
		System.out.print("카시트 ex) [1] Yes, [2] No : ");
		String sheetResult = reader.readLine();
		
		reservationFrom();
	}
	
	public static void reservationFrom() throws IOException {
		System.out.print("[1] 예약, [2] 돌아가기\n선택 : ");
		switch (Integer.parseInt(reader.readLine())) {
			case Util.NO1 :
				// 예약
				paymentForm();
				break;
			case Util.NO2 :
				// 돌아가기
				break;
			default:
				break;
		}
	}
	
	public static void paymentForm() throws IOException {
		System.out.println("마일리지 : ");
		System.out.println("최종금액 : ");
		System.out.print("[1] 결제, [2] 마일리지 충전, [3] 취소\n선택 : ");
		switch (Integer.parseInt(reader.readLine())) {
			case Util.NO1 :
				// 결제
				break;
			case Util.NO2 :
				//마일리지 충전
				mileage();
				break;
			case Util.NO3 :
				//취소
				break;
			default:
				break;
		}
	}
	
	public static void cancellationFrom() throws IOException {
		System.out.println("예약리스트");
		System.out.print("취소번호 입력 : ");
		cancellation(Integer.parseInt(reader.readLine()));
	}
	
	public static void cancellation(int index) throws IOException {
		System.out.println("돌려받을 금액 : ");
		System.out.print("[1] OK, [2] Cancle\n선택 : ");
		switch (Integer.parseInt(reader.readLine())) {
			case Util.NO1 :
				// 예약취소
				break;
			case Util.NO2 :
				// 취소
				break;
			default:
				break;
		}
	}
	
	public static void mileageForm() throws IOException {
		System.out.println("현재금액 : ");
		System.out.print("[1] 충전, [2] 돌아가기");
		switch (Integer.parseInt(reader.readLine())) {
			case Util.NO1 :
				// 충전
				mileage();
				break;
			case Util.NO2 :
				// 돌아가기
				break;
			default:
				break;
		}
	}
	
	public static void mileage() throws IOException {
		System.out.println("현재금액");
		System.out.print("충전 할 금액 입력 : ");
		int cash = Integer.parseInt(reader.readLine());
		MilegeController.updateMileage(Util.MILECODE[0] , cash , "id20");
	}
	
	public static void boardForm() throws IOException {
		while(true) {
			System.out.print("1. 등록\n2. 수정\n3. 삭제\n4. 돌아가기\n선택 : ");
			if(board(Integer.parseInt(reader.readLine()))==Util.NO4) {
				break;
			}
		}
	}
	
	public static int board(int index) throws IOException {
		switch (index) {
			case Util.NO1 :
				registerBoardForm();
				// 게시판 등록
				break;
			case Util.NO2 :
				updateBoardForm();
				// 게시판 수정
				break;
			case Util.NO3 :
				deleteBoardForm();
				// 게시판 삭제
				break;
			case Util.NO4 :
				//돌아가기
				break;
			default:
				break;
		}
		return index;
	}
	
	public static void registerBoardForm() throws IOException {
		System.out.print("제목 : ");
		String boaTitle = reader.readLine();
		System.out.print("내용 : ");
		String boaContent = reader.readLine();
	}
	
	public static void updateBoardForm() throws IOException {
		System.out.print("수정할 글 번호 입력 : ");
		int index = Integer.parseInt(reader.readLine());
		System.out.print("제목 : ");
		String boaTitle = reader.readLine();
		System.out.print("내용 : ");
		String boaContent = reader.readLine();
	}

	public static void deleteBoardForm() throws IOException {
		System.out.print("삭제할 글 번호 입력 : ");
		int index = Integer.parseInt(reader.readLine());
	}
	
	public static void main(String[] args) {
		while(true) {
			try {
				if(startForm() == Util.NO3) {
					break;
				}
			} catch (IOException e) {
				e.printStackTrace();
				System.out.println("다시 입력해주세요.");
			}
		}
	}

}
