package model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Properties;

import model.dto.CarDTO;
import model.dto.MemberOneSalsDTO;
import model.dto.SessionDTO;
import util.DBUtil;

public class MemberDAO {
	private static MemberDAO instance = new MemberDAO();
	private MemberDAO() {}
	
	public static MemberDAO getInstance() {
		return instance;
	}
	
	private static Properties info = DBUtil.getInfo();
	
	public SessionDTO memberLogin(String memID, String memPW) throws SQLException {
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		SessionDTO session = null;
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(info.getProperty("memberLogin"));
			pstmt.setString(1, memID);
			pstmt.setString(2, memPW);
			
			rset = pstmt.executeQuery();
			
			if(rset.next()) {
				session = new SessionDTO(rset.getString(1), rset.getString(2), rset.getString(3), rset.getInt(4));
			}
		} finally {
			DBUtil.close(con, pstmt, rset);
		}
		return session;
	}
	
	public int getMemberMileage(String memID, Connection con) throws SQLException {
		int money = 0;
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		try{
			pstmt = con.prepareStatement(info.getProperty("getMemberMileage"));
			pstmt.setString(1, memID);
			rset = pstmt.executeQuery();
			if(rset.next()) {
				money = rset.getInt(1);
			}
			
		} finally {
			DBUtil.close(pstmt, rset);
		}
		return money;
	}
	
	public MemberOneSalsDTO selectMemberOneSals(String memID) throws SQLException {
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		MemberOneSalsDTO m = null;
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(info.getProperty("selectMemberOneSals"));
			pstmt.setString(1, memID);
			rset = pstmt.executeQuery();
			while(rset.next()) {
				m = new MemberOneSalsDTO(rset.getInt(1), rset.getDouble(2));
			}
		} finally {
			DBUtil.close(con, pstmt, rset);
		}
		return m;
	}
	
	
}
