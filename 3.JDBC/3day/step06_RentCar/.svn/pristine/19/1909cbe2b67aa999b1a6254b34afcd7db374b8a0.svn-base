package model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import model.dto.CarDTO;
import util.DBUtil;

public class CarDAO {
	private static CarDAO instance = new CarDAO();
	private CarDAO() {}
	public static CarDAO getInstance() {
		return instance;
	}
	
	public ArrayList<CarDTO> carAll() throws SQLException {
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rset = null;

		ArrayList<CarDTO> carDataAll = null;
		
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement("select * from car");
			rset = pstmt.executeQuery();
			carDataAll = new ArrayList<CarDTO>();
			while (rset.next()) {
				carDataAll.add(new CarDTO(rset.getInt(2),rset.getString(3),rset.getString(4),
						rset.getString(5),rset.getString(6), rset.getInt(7), rset.getString(8)));
			}
		} finally {
			DBUtil.close(con, pstmt, rset);
		}
		return carDataAll;
	}

	public static boolean insertCar(CarDTO car) throws SQLException {
		Connection con = null;
		PreparedStatement pstmt = null;
		boolean result = false;

		try {
			con = DBUtil.getConnection();
			pstmt = con
					.prepareStatement("insert into car values(carSeq.nextval, ?,?,?,?,?,?,?,default,default)");
			pstmt.setInt(1, car.getAgtNo());
			pstmt.setString(2, car.getCarName());
			pstmt.setString(3, car.getCarNum());
			pstmt.setString(4, car.getCarPax());
			pstmt.setString(5, car.getCarKind());
			pstmt.setInt(6, car.getCarPrice());
			pstmt.setString(7, car.getCarFuel());
			
			int i = pstmt.executeUpdate();
			if (i == 1) {
				result = true;
			}
		} finally {
			DBUtil.close(con, pstmt, null);
		}
		return result;
	}

	public static int deleteCar(int i) throws SQLException {
		Connection con = null;
		PreparedStatement pstmt = null;
		int result = 0;
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement("delete car from carNo=?");
			pstmt.setInt(1, i);
			result = pstmt.executeUpdate();
		} finally {
			DBUtil.close(con, pstmt);
		}
		return result;
	}

}
